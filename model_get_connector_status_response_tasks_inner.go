/*
Kafka Connect REST API

Kafka Connect REST API https://docs.confluent.io/platform/current/connect/references/restapi.html

API version: 0.1.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetConnectorStatusResponseTasksInner struct for GetConnectorStatusResponseTasksInner
type GetConnectorStatusResponseTasksInner struct {
	// ID of the task.
	Id *int32 `json:"id,omitempty"`
	// Stack trace information if the task has failed.
	Trace *string `json:"trace,omitempty"`
	State *State `json:"state,omitempty"`
	// ID of the worker.
	WorkerId *string `json:"worker_id,omitempty"`
}

// NewGetConnectorStatusResponseTasksInner instantiates a new GetConnectorStatusResponseTasksInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConnectorStatusResponseTasksInner() *GetConnectorStatusResponseTasksInner {
	this := GetConnectorStatusResponseTasksInner{}
	return &this
}

// NewGetConnectorStatusResponseTasksInnerWithDefaults instantiates a new GetConnectorStatusResponseTasksInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConnectorStatusResponseTasksInnerWithDefaults() *GetConnectorStatusResponseTasksInner {
	this := GetConnectorStatusResponseTasksInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetConnectorStatusResponseTasksInner) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectorStatusResponseTasksInner) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetConnectorStatusResponseTasksInner) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetConnectorStatusResponseTasksInner) SetId(v int32) {
	o.Id = &v
}

// GetTrace returns the Trace field value if set, zero value otherwise.
func (o *GetConnectorStatusResponseTasksInner) GetTrace() string {
	if o == nil || o.Trace == nil {
		var ret string
		return ret
	}
	return *o.Trace
}

// GetTraceOk returns a tuple with the Trace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectorStatusResponseTasksInner) GetTraceOk() (*string, bool) {
	if o == nil || o.Trace == nil {
		return nil, false
	}
	return o.Trace, true
}

// HasTrace returns a boolean if a field has been set.
func (o *GetConnectorStatusResponseTasksInner) HasTrace() bool {
	if o != nil && o.Trace != nil {
		return true
	}

	return false
}

// SetTrace gets a reference to the given string and assigns it to the Trace field.
func (o *GetConnectorStatusResponseTasksInner) SetTrace(v string) {
	o.Trace = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetConnectorStatusResponseTasksInner) GetState() State {
	if o == nil || o.State == nil {
		var ret State
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectorStatusResponseTasksInner) GetStateOk() (*State, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetConnectorStatusResponseTasksInner) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given State and assigns it to the State field.
func (o *GetConnectorStatusResponseTasksInner) SetState(v State) {
	o.State = &v
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise.
func (o *GetConnectorStatusResponseTasksInner) GetWorkerId() string {
	if o == nil || o.WorkerId == nil {
		var ret string
		return ret
	}
	return *o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectorStatusResponseTasksInner) GetWorkerIdOk() (*string, bool) {
	if o == nil || o.WorkerId == nil {
		return nil, false
	}
	return o.WorkerId, true
}

// HasWorkerId returns a boolean if a field has been set.
func (o *GetConnectorStatusResponseTasksInner) HasWorkerId() bool {
	if o != nil && o.WorkerId != nil {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given string and assigns it to the WorkerId field.
func (o *GetConnectorStatusResponseTasksInner) SetWorkerId(v string) {
	o.WorkerId = &v
}

func (o GetConnectorStatusResponseTasksInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Trace != nil {
		toSerialize["trace"] = o.Trace
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.WorkerId != nil {
		toSerialize["worker_id"] = o.WorkerId
	}
	return json.Marshal(toSerialize)
}

type NullableGetConnectorStatusResponseTasksInner struct {
	value *GetConnectorStatusResponseTasksInner
	isSet bool
}

func (v NullableGetConnectorStatusResponseTasksInner) Get() *GetConnectorStatusResponseTasksInner {
	return v.value
}

func (v *NullableGetConnectorStatusResponseTasksInner) Set(val *GetConnectorStatusResponseTasksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConnectorStatusResponseTasksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConnectorStatusResponseTasksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConnectorStatusResponseTasksInner(val *GetConnectorStatusResponseTasksInner) *NullableGetConnectorStatusResponseTasksInner {
	return &NullableGetConnectorStatusResponseTasksInner{value: val, isSet: true}
}

func (v NullableGetConnectorStatusResponseTasksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConnectorStatusResponseTasksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


