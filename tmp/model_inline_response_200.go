/*
Kafka Connect REST API

Kafka Connect REST API https://docs.confluent.io/platform/current/connect/references/restapi.html

API version: 0.1.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200 struct for InlineResponse200
type InlineResponse200 struct {
	Version *string `json:"version,omitempty"`
	Commit *string `json:"commit,omitempty"`
	KafkaClusterId *string `json:"kafka_cluster_id,omitempty"`
}

// NewInlineResponse200 instantiates a new InlineResponse200 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200() *InlineResponse200 {
	this := InlineResponse200{}
	return &this
}

// NewInlineResponse200WithDefaults instantiates a new InlineResponse200 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200WithDefaults() *InlineResponse200 {
	this := InlineResponse200{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *InlineResponse200) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *InlineResponse200) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *InlineResponse200) SetVersion(v string) {
	o.Version = &v
}

// GetCommit returns the Commit field value if set, zero value otherwise.
func (o *InlineResponse200) GetCommit() string {
	if o == nil || o.Commit == nil {
		var ret string
		return ret
	}
	return *o.Commit
}

// GetCommitOk returns a tuple with the Commit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetCommitOk() (*string, bool) {
	if o == nil || o.Commit == nil {
		return nil, false
	}
	return o.Commit, true
}

// HasCommit returns a boolean if a field has been set.
func (o *InlineResponse200) HasCommit() bool {
	if o != nil && o.Commit != nil {
		return true
	}

	return false
}

// SetCommit gets a reference to the given string and assigns it to the Commit field.
func (o *InlineResponse200) SetCommit(v string) {
	o.Commit = &v
}

// GetKafkaClusterId returns the KafkaClusterId field value if set, zero value otherwise.
func (o *InlineResponse200) GetKafkaClusterId() string {
	if o == nil || o.KafkaClusterId == nil {
		var ret string
		return ret
	}
	return *o.KafkaClusterId
}

// GetKafkaClusterIdOk returns a tuple with the KafkaClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetKafkaClusterIdOk() (*string, bool) {
	if o == nil || o.KafkaClusterId == nil {
		return nil, false
	}
	return o.KafkaClusterId, true
}

// HasKafkaClusterId returns a boolean if a field has been set.
func (o *InlineResponse200) HasKafkaClusterId() bool {
	if o != nil && o.KafkaClusterId != nil {
		return true
	}

	return false
}

// SetKafkaClusterId gets a reference to the given string and assigns it to the KafkaClusterId field.
func (o *InlineResponse200) SetKafkaClusterId(v string) {
	o.KafkaClusterId = &v
}

func (o InlineResponse200) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Commit != nil {
		toSerialize["commit"] = o.Commit
	}
	if o.KafkaClusterId != nil {
		toSerialize["kafka_cluster_id"] = o.KafkaClusterId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200 struct {
	value *InlineResponse200
	isSet bool
}

func (v NullableInlineResponse200) Get() *InlineResponse200 {
	return v.value
}

func (v *NullableInlineResponse200) Set(val *InlineResponse200) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200(val *InlineResponse200) *NullableInlineResponse200 {
	return &NullableInlineResponse200{value: val, isSet: true}
}

func (v NullableInlineResponse200) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


